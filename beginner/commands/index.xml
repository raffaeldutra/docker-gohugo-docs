<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rodando containers on Documentação Docker</title>
    <link>https://docker.rafaeldutra.me/beginner/commands/</link>
    <description>Recent content in Rodando containers on Documentação Docker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-BR</language>
    
	<atom:link href="https://docker.rafaeldutra.me/beginner/commands/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Comandos</title>
      <link>https://docker.rafaeldutra.me/beginner/commands/commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docker.rafaeldutra.me/beginner/commands/commands/</guid>
      <description>Para verificar todos os comandos proporcionados por Docker, simplesmente digite:
docker  Importante: não esqueça que a linha de comando (CLI) é sua melhor amiga, caso não souber como um comando continua, ou seja, opções deste comando, simplesmente digite:
docker &amp;lt;comando&amp;gt; --help  </description>
    </item>
    
    <item>
      <title>Rodando um container</title>
      <link>https://docker.rafaeldutra.me/beginner/commands/rodando-container/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docker.rafaeldutra.me/beginner/commands/rodando-container/</guid>
      <description>docker run alpine hostname  Você provavelmente teve uma resposta com letras e números, algo como: 7ed46aef747a.
O que acabamos de ver aqui é o nome do container no momento que você o executou.
Vamos explicar por partes o que o comando acima faz:
 docker run executa um container alpine é o nome da imagem que estamos Utilizando hostname é o comando que é executado dentro do container, por isso obtemos aquele conjunto de números e letras como resposta quando executamos o comando.</description>
    </item>
    
    <item>
      <title>Utilizando imagens</title>
      <link>https://docker.rafaeldutra.me/beginner/commands/utilizando-imagens/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docker.rafaeldutra.me/beginner/commands/utilizando-imagens/</guid>
      <description>Tudo que iremos executar em um container, vem de uma imagem e essa imagem pode ser uma que você mesmo criou ou uma imagem oficial, como foi o nosso caso acima como o Alpine.
 Apenas por conhecimento, Alpine é uma distribuição Linux super pequena que neste exato momento em sua versão 3.7.0 tem uma iso de 130MB e o mesmo vale para sua imagem para container, acredite, são 4.5MB de tamanho.</description>
    </item>
    
    <item>
      <title>Gerenciando os containers</title>
      <link>https://docker.rafaeldutra.me/beginner/commands/gerenciando-containers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docker.rafaeldutra.me/beginner/commands/gerenciando-containers/</guid>
      <description>Para podermos utilizar os comandos de stop e start, por exemplo, precisamos ter um container que de fato esta parado ou rodando, certo? então agora vamos rodar um container um pouco mais &amp;ldquo;complexo&amp;rdquo;.
 Atenção, localhost é para máquinas que estão com Docker rodando diretamente no &amp;ldquo;bare metal&amp;rdquo;, se estiver utilizando VM acesse o IP desta VM, algo como 192.168.25.100 - 10.100.111.222
 Abra um browser e acesse http://localhost:45000 e a página não foi localizada, certo?</description>
    </item>
    
    <item>
      <title>Manipulando containers</title>
      <link>https://docker.rafaeldutra.me/beginner/commands/manipulando-containers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docker.rafaeldutra.me/beginner/commands/manipulando-containers/</guid>
      <description>O comando que executamos incialmente docker run alpine hostname é o mais básico possível para termos um container em &amp;ldquo;funcionamento&amp;rdquo;. O &amp;ldquo;funcionamento&amp;rdquo; entre aspas é o que iremos discutir neste momento.
Antes tentamos remover a imagem alpine e obtivemos um erro, mas o que causou o erro? Foi devido que o container está rodando. Então como sabemos se um container está rodando? ou melhor, como sabemos o &amp;ldquo;status&amp;rdquo; de um container?</description>
    </item>
    
    <item>
      <title>Limpando o que não é usado</title>
      <link>https://docker.rafaeldutra.me/beginner/commands/limpando-o-que-nao-e-usado/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docker.rafaeldutra.me/beginner/commands/limpando-o-que-nao-e-usado/</guid>
      <description>Você irá notar que depois de muitos comandos para lá e para cá, muitas coisas ficaram para trás, como containers parados, imagens não &amp;ldquo;funcionais&amp;rdquo; e etc. Para limparmos essa bagunça, execute o comando abaixo:
docker system prune  Você irá receber algo do tipo:
rafael @ nazgul ~ └─ $ ▶ docker system prune WARNING! This will remove: - all stopped containers - all networks not used by at least one container - all dangling images - all build cache Are you sure you want to continue?</description>
    </item>
    
  </channel>
</rss>